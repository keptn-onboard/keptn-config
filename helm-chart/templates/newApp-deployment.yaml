sampleAppCode:
    replicaCount: 1
    image: {repository: bacherfl/mean-k8s, tag: 0.1.0, pullPolicy: IfNotPresent}
    service: {name: mean-k8s, type: LoadBalancer, externalPort: 3000, internalPort: 3000}
    resources: {limits: {cpu: 100m, memory: 128Mi}, requests: {cpu: 100m, memory: 128Mi}}
    mongodb: {mongodbRootPassword: L8zLskMV+SY=, mongodbUsername: meanmapsapp, mongodbPassword: 6Z0VQHTrQqg, mongodbDatabase: meanmapsapp, persistence: {enabled: true, accessMode: ReadWriteOnce, size: 8Gi}}
sampleAppCodeBlue:
    replicaCount: 1
    image: {repository: bacherfl/mean-k8s, tag: staging-stable, pullPolicy: IfNotPresent}
    service: {name: mean-k8s-blue, type: LoadBalancer, externalPort: 3000, internalPort: 3000}
    resources: {limits: {cpu: 100m, memory: 128Mi}, requests: {cpu: 100m, memory: 128Mi}}
    mongodb: {mongodbRootPassword: L8zLskMV+SY=, mongodbUsername: meanmapsapp, mongodbPassword: 6Z0VQHTrQqg, mongodbDatabase: meanmapsapp, persistence: {enabled: true, accessMode: ReadWriteOnce, size: 8Gi}}
sampleAppCodeGreen:
    replicaCount: 1
    image: {repository: bacherfl/mean-k8s, tag: 0.1.0, pullPolicy: IfNotPresent}
    service: {name: mean-k8s-green, type: LoadBalancer, externalPort: 3000, internalPort: 3000}
    resources: {limits: {cpu: 100m, memory: 128Mi}, requests: {cpu: 100m, memory: 128Mi}}
    mongodb: {mongodbRootPassword: L8zLskMV+SY=, mongodbUsername: meanmapsapp, mongodbPassword: 6Z0VQHTrQqg, mongodbDatabase: meanmapsapp, persistence: {enabled: true, accessMode: ReadWriteOnce, size: 8Gi}}
newApp:
    newApp: {replicaCount: 1, image: {repository: null, tag: null, pullPolicy: IfNotPresent}, service: {name: null, type: LoadBalancer, externalPort: 8080, internalPort: 8080}, resources: {limits: {cpu: 100m, memory: 128Mi}, requests: {cpu: 100m, memory: 128Mi}}}
